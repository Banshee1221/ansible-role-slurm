---

- name: Install dependencies for Slurm runtime
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - munge
    - libmunge-dev
    - libmunge2

- name: Stop munge service
  service:
    name: munge
    state: stopped

- name: Copy munge.service
  copy:
      src: "{{ role_path }}/files/munge.service"
      dest: /lib/systemd/system/munge.service
      owner: root
      group: root
      mode: 0644

- name: Restart munge service
  systemd:
    name: munge
    state: started
    daemon_reload: yes

- name: Retrieve key for munge cluster
  fetch:
    src: /etc/munge/munge.key
    dest: "{{ conf_dir }}/munge.key"
    flat: yes
  when: "slurm_builder is defined"

- name: Check if pub key exists on slurm master
  stat:
    path: /root/.ssh/id_rsa
  register: stat_ssh
  when: inventory_hostname == groups['all'][0]

- name: Generate SSH keys on slurm master
  shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
  args:
    creates: /root/.ssh/id_rsa
  when: (inventory_hostname == groups['slurm'][0]) and (stat_ssh.stat.exists == False | default(False))

- name: Retrieve public key from slurm master
  slurp:
    src:  /root/.ssh/id_rsa.pub
  register: pubkey
  when: inventory_hostname == groups['slurm'][0]

- name: Distribute public key to cluster
  lineinfile:
    path: /root/.ssh/authorized_keys
    state: present
    line: "{{ hostvars[groups['slurm'][0]]['pubkey']['content'] | b64decode }}"

- name: Create munge directory
  file:
    path: /etc/munge
    state: directory

- name: Distribute munge key to all machines
  copy:
    src: "{{ conf_dir }}/munge.key"
    dest: /etc/munge/munge.key
    force: yes
    mode: 0400

- name: Restart munge service
  service:
    name: munge
    state: restarted

- name: Create runtime directories
  file:
    path: "{{ item }}"
    owner: slurm
    group: slurm
    state: directory
  with_items:
    - /var/run/slurm
    - /var/spool/slurm
    - /var/log/slurm