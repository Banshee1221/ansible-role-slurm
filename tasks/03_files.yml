---

- name: Initialize empty list for partitions
  set_fact:
    end_list: []

- name: Set facts about partitions
  set_fact:
    end_list: "{{ end_list }} + {{ hostvars[item].partitions|default(['main']) }}"
  loop: "{{ play_hosts }}"
  run_once: true
  ignore_errors: yes

- name: Set fact about hosts for templates
  set_fact:
    hpc: "{{ play_hosts }}"
  when:
    - headnode is defined
  run_once: True
  
- name: Template out the Slurm conf files
  template:
    src: "{{ role_path }}/files/{{ item.src }}.j2"
    dest: "{{ slurm_install_dir }}/etc/{{ item.src }}"
    owner: slurm
    group: slurm
    mode: 0644
  when:
    - headnode is defined
    - item.when
  loop:
    - { src: cgroup.conf, when: True }
    - { src: cgroup_allowed_devices_file.conf, when: True }
    - { src: slurm.conf, when: True }
    - { src: slurmdbd.conf, when: "{{slurm_use_db}}" }
  notify:
    - systemd restart slurmdbd
    - systemd restart slurmctld
    - systemd restart slurmd

- name: Template out the service files to the slurm controller
  template:
    src: "{{ role_path }}/files/{{ item.src }}.j2"
    dest: "/etc/systemd/system/{{ item.src }}"
    owner: root
    group: root
    mode: 0644
  when:
    - headnode is defined
    - item.when
  loop:
    - { src: slurmctld.service, when: True }
    - { src: slurmdbd.service, when: "{{slurm_use_db}}" }
  notify:
    - systemd restart slurmdbd
    - systemd restart slurmctld

- name: Template out service files to all machines
  template:
    src: "{{ role_path }}/files/slurmd.service.j2"
    dest: "/etc/systemd/system/slurmd.service"
    owner: root
    group: root
    mode: 0644
  when:
    - headnode is not defined
  notify:
    - systemd restart slurmd
