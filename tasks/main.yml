---

- name: Install necessary components for ansible role
  apt:
    name: rsync
    state: present

- name: Check if Database exists on machine
  wait_for: "host={{ db_host }} port={{ db_port }} timeout=5"
  register: dbfail
  failed_when: false
  ignore_errors: yes
  when:
    - slurm_builder is defined
    - slurm_use_db
  run_once: true

- name: Prepare database for Slurm
  include_tasks: 01_database.yml
  args:
    apply:
      connection: local
      become: no
  when:
    - slurm_use_db
    - not dbfail['failed']
    - slurm_builder is defined
  run_once: true

- name: Check if slurm is compiled/installed
  stat:
    path: "{{ slurm_install_dir }}"
  register: stat_result
  when:
    - slurm_builder is defined
  run_once: true

- name: Check if slurm_drmaa is compiled/installed
  stat:
    path: "{{ slurm_install_dir }}/lib/libdrmaa.a"
  register: stat_drmaa_result
  when:
    - slurm_builder is defined
    - slurm_drmaa_support == True
  run_once: true

- name: Compile slurm 
  include_tasks: _compile.yml
  when:
    - not stat_result.stat.exists
    - slurm_builder is defined

- name: install slurm drmaa module
  include: _compile-drmaa.yml
  when:
    - slurm_drmaa_support
    - slurm_builder is defined
    - not stat_drmaa_result.stat.exists

- name: Ensure slurm configuration directory
  file:
    path: "{{ slurm_install_dir }}/etc"
    state: directory

- name:
  block:
    - name: Copy Slurm files from headnode
      synchronize:
        src: "{{ slurm_install_dir | regex_replace('\\/$', '') }}/"
        dest: "/tmp/slurm/"
        recursive: True
        mode: pull
      when: headnode is defined
    - name: Copy Slurm files to non-headnodes
      synchronize:
        src: "/tmp/slurm/"
        dest: "{{ slurm_install_dir | regex_replace('\\/$', '') }}"
        mode: push
      when: not (headnode is defined)
  when: not slurm_use_shared_fs

- name: Install Slurm dependencies
  include_tasks: 02_dependencies.yml

- name: Deploy Slurm files
  include_tasks: 03_files.yml      
  
- name: Copy environment file
  template:
    src: "{{ role_path }}/files/environment"
    dest: /etc/environment
    mode: 644
    owner: root
    group: root
